@page "/solution"
@inherits BaseComponent
@inject IStringLocalizer<Localization> Localizer

<h3 class="mt-4">@Localizer["SolutionCreationPageTitle"]</h3>

<div class="d-flex flex-row align-center mt-4">
    <MudTextField @bind-Value="_solutionPath" Required RequiredError=@Localizer["SolutionPathRequiredErrorMessage"] Label=@Localizer["SolutionPathInputLabel"] Class="mr-4" />
    <MudButton OnClick="ChooseFolder" Variant="Variant.Outlined" Class="mt-4">@Localizer["ChooseFolderBtn"]</MudButton>
</div>

<MudTextField @bind-Value="_solutionName" Required RequiredError=@Localizer["SolurionNameRequiredErrorMessage"] Label=@Localizer["SolutionNameLabel"] />

<MudButton OnClick="CreateSolution" Variant="Variant.Outlined" Class="mt-4" Disabled="!string.IsNullOrEmpty(_message)">@Localizer["CreateSolutionBtn"]</MudButton>

<MudText Color="Color.Success" Class="mt-6">@_message</MudText>

@if (!string.IsNullOrEmpty(_message))
{
    <MudButton Href=@($"/architecture") Variant="Variant.Outlined" Class="mt-4">@Localizer["NextBtn"]</MudButton>
}

@code {
    private string? _solutionName;
    private string? _solutionPath = string.Empty;
    private string _message = string.Empty;

    private async Task ChooseFolder()
    {
        _solutionPath = await FolderPicker.PickFolder(_solutionPath);

        StateHasChanged();
    }

    private async void CreateSolution()
    {
        if (string.IsNullOrEmpty(_solutionName) || string.IsNullOrEmpty(_solutionPath))
        {
            return;
        }

        InMemoryUserSettings.SolutionName = _solutionName;
        InMemoryUserSettings.SolutionPath = _solutionPath;

        var tokenSource = new CancellationTokenSource();
        tokenSource.CancelAfter(60000);
        var ct = tokenSource.Token;

        await SolutionService.CreateSolution(new SolutionSettingsModel 
            {
                SolutionName = _solutionName,
                SolutionPath = _solutionPath
            }, ct);

        _message = Localizer["SolutionCreatedMessage", _solutionName];

        StateHasChanged();
    }
}