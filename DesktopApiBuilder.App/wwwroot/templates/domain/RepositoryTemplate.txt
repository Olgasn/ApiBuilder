using Microsoft.EntityFrameworkCore;
using {0};
using {1};

namespace {2};

public class {3}Repository(AppDbContext dbContext) : I{3}Repository
{{
    private readonly AppDbContext _dbContext = dbContext;

    public async Task Create({3} entity) => await _dbContext.{4}.AddAsync(entity);

    public async Task<IEnumerable<{3}>> Get(bool trackChanges) =>
        await (!trackChanges 
            ? _dbContext.{4}{5}.AsNoTracking() 
            : _dbContext.{4}{5}).ToListAsync();

    public async Task<{3}?> GetById({6} id, bool trackChanges) =>
        await (!trackChanges ?
            _dbContext.{4}{5}.AsNoTracking() :
            _dbContext.{4}{5}).SingleOrDefaultAsync(e => e.Id == id);

    public void Delete({3} entity) => _dbContext.{4}.Remove(entity);

    public void Update({3} entity) => _dbContext.{4}.Update(entity);

    public async Task SaveChanges() => await _dbContext.SaveChangesAsync();
}}
