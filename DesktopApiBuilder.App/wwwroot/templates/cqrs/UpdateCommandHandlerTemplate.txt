﻿using MediatR;
using AutoMapper;
using {0};
using {1};

namespace {2};

public class Update{3}CommandHandler : IRequestHandler<Update{3}Command, bool>
{{
	private readonly I{3}Repository _repository;
	private readonly IMapper _mapper;

	public Update{3}CommandHandler(I{3}Repository repository, IMapper mapper)
	{{
		_repository = repository;
		_mapper = mapper;
	}}

	public async Task<bool> Handle(Update{3}Command request, CancellationToken cancellationToken)
	{{
		var entity = await _repository.GetById(request.{3}.Id, trackChanges: true);

        if (entity is null)
        {{
            return false;
        }}

		_mapper.Map(request.{3}, entity);

		_repository.Update(entity);
		await _repository.SaveChanges();

		return true;
	}}
}}